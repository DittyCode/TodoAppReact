{"version":3,"sources":["components/UI/Wrapper/Wrapper.js","store/todolist-context.js","store/theme-context.js","assets/images/icon-sun.svg","assets/images/icon-moon.svg","components/Todo/TodoHeader/TodoHeader.js","components/UI/Storage/Storage.js","components/UI/Button/Button.js","assets/images/icon-check.svg","components/Todo/TodoForm/TodoForm.js","assets/images/icon-cross.svg","components/Todo/TodoItem/TodoItem.js","components/Todo/TodoActions/TodoActions.js","components/Todo/TodoList/TodoList.js","components/Todo/TodoContainer/TodoContainer.js","utils/themes.js","assets/images/bg-desktop-dark.jpg","assets/images/bg-desktop-light.jpg","App.js","index.js"],"names":["WrapperItem","styled","div","props","theme","logo","background","Wrapper","children","TodoContext","createContext","ThemeContext","Header","header","Heading","h1","Button","button","TodoHeader","useContext","setTheme","onClick","themes","localStorage","setItem","src","getItem","iconSun","iconMoon","alt","title","saveToStorage","key","JSON","stringify","getFromTodos","parse","DivButton","ButtonItem","status","complete","Form","form","Input","input","color","Error","TodoForm","setTodoItems","useState","inputValue","setInputValue","setComplete","error","setError","todoId","nextId","onSubmit","e","preventDefault","prevState","id","name","isComplete","items","icon","value","type","placeholder","onChange","target","Item","TodoValue","h2","DeleteButton","TodoItem","todoItems","decoration","changedItems","map","todoItem","idx","style","textDecoration","withoutDeleteItem","filter","iconDelete","TodoActionWrapper","h3","Buttons","ButtonsMobile","TodoActions","filteredTodos","setFilteredTodos","useReducer","state","action","activeTodos","completedTodos","clearTodos","console","log","dispatch","length","TodosList","main","TodoList","Todo","TodoContainer","useEffect","Provider","dark","light","App","storageTheme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAEMA,EAAcC,IAAOC,IAAV,yNAEQ,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAMzB,SAAAF,GAAK,OAAIA,EAAMC,MAAME,cAM3BC,EAHC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OAAO,cAACR,EAAD,UAAcQ,KCVPC,EAFKC,wBAAc,MCEnBC,EAFMD,wBAAc,MCFpB,MAA0B,qCCA1B,MAA0B,sCCQnCE,EAASX,IAAOY,OAAV,0HAONC,EAAUb,IAAOc,GAAV,wPAcPC,EAASf,IAAOgB,OAAV,gPAwCGC,EA1BI,WAClB,MAA4BC,qBAAWR,GAA/BP,EAAR,EAAQA,MAAOgB,EAAf,EAAeA,SASf,OACC,eAACR,EAAD,WACC,8BACC,cAACE,EAAD,qBAED,cAAC,EAAD,CAAQO,QAZU,WACnB,IAAMC,EAAmB,SAAVlB,EAAmB,QAAU,OAE5CmB,aAAaC,QAAQ,QAASF,GAC9BF,EAASE,IAQR,SACC,qBACCG,IAAuC,SAAlCF,aAAaG,QAAQ,SAAsBC,EAAUC,EAC1DC,IAAI,mBACJC,MAAM,uB,OC9DEC,EAAgB,SAAAC,GAC5BT,aAAaC,QAAQ,QAASS,KAAKC,UAAUF,KAGjCG,EAAe,SAAAH,GAC3B,OAAOC,KAAKG,MAAMb,aAAaG,QAAQM,KAAS,I,iBCH3CK,EAAYpC,IAAOC,IAAV,sKAUToC,EAAarC,IAAOC,IAAV,gVAWK,SAAAC,GAAK,OACxBA,EAAMoC,OACH,mEACA,UAgBUvB,EAVA,SAAC,GAAqC,IAAnCR,EAAkC,EAAlCA,SAAUa,EAAwB,EAAxBA,QAASmB,EAAe,EAAfA,SACpC,OACC,cAACH,EAAD,UACC,cAACC,EAAD,CAAYC,OAAQC,EAAUnB,QAASA,EAAvC,SACEb,OCpCU,MAA0B,uCCQnCiC,EAAOxC,IAAOyC,KAAV,sLAKW,SAAAvC,GAAK,OAAIA,EAAMC,MAAME,cAIpCqC,EAAQ1C,IAAO2C,MAAV,+OAMD,SAAAzC,GAAK,OAAIA,EAAMC,MAAMyC,SAQzBC,EAAQ7C,IAAOC,IAAV,sFAqEI6C,EA/DE,SAAA5C,GAChB,IAAQ6C,EAAiB7B,qBAAWV,GAA5BuC,aACR,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOT,EAAP,KAAiBY,EAAjB,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACMC,EAASC,MAyCf,OACC,qCACC,eAACf,EAAD,CAAMgB,SAzCa,SAAAC,GAEpB,GADAA,EAAEC,iBACGT,EACA,CAOJ,GANAI,GAAS,GACTN,GAAa,SAAAY,GAAS,4BAClBA,GADkB,CAErB,CAAEC,GAAIN,EAAQO,KAAMZ,EAAYa,WAAYvB,QAGf,OAA1BL,EAAa,SAChBJ,EAAc,CACb,CACC8B,GAAIN,EACJO,KAAMZ,EACNa,WAAYvB,SAGR,CACN,IAAMwB,EAAK,sBACP7B,EAAa,UADN,CAEV,CACC0B,GAAIN,EACJO,KAAMZ,EACNa,WAAYvB,KAGdT,EAAciC,GAEfb,EAAc,SA3BEG,GAAS,IAuCzB,UACC,cAAC,EAAD,CAAQjC,QAPS,WACnB+B,GAAaZ,IAMmBA,SAAUA,EAAxC,SACEA,GAAY,qBAAKf,IAAKwC,EAAMpC,IAAI,0BAElC,cAACc,EAAD,CACCuB,MAAOhB,EACPiB,KAAK,OACLC,YAAY,uBACZC,SAjBiB,SAAAX,GACpBP,EAAcO,EAAEY,OAAOJ,aAmBrBb,GAAS,cAACP,EAAD,uC,QChGE,OAA0B,uCCSnCyB,GAAOtE,IAAOC,IAAV,kKAIW,SAAAC,GAAK,OAAIA,EAAMC,MAAME,cAIpCkE,GAAYvE,IAAOwE,GAAV,yMAEL,SAAAtE,GAAK,OAAIA,EAAMC,MAAMyC,SAUzB6B,GAAezE,IAAOgB,OAAV,6FA0CH0D,GApCE,SAAC,GAA8B,IAA5Bd,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAC7B,EAAoC5C,qBAAWV,GAAvCmE,EAAR,EAAQA,UAAW5B,EAAnB,EAAmBA,aAEb6B,EAAad,EAAa,eAAiB,OAoBjD,OACC,eAACQ,GAAD,WACC,cAAC,EAAD,CAAQ/B,SAAUuB,EAAY1C,QApBZ,WACnB,IAAMyD,EAAeF,EAAUG,KAAI,SAACC,EAAUC,GAC7C,OAAID,EAASlB,OAASA,GACrBkB,EAASjB,YAAciB,EAASjB,WACzB,eAAKiB,IAENA,KAERjD,EAAc+C,GACd9B,GAAa,SAAAY,GAAS,mBAAQkB,OAW7B,SACEf,GAAc,qBAAKtC,IAAKwC,EAAMpC,IAAI,0BAEpC,cAAC2C,GAAD,CAAWU,MAAO,CAAEC,eAAgBN,GAApC,SAAmDf,IACnD,cAACY,GAAD,CAAcrD,QAZU,WACzB,IAAM+D,EAAoBR,EAAUS,QAAO,SAAAL,GAAQ,OAAIA,EAASnB,KAAOA,KACvE9B,EAAcqD,GACdpC,EAAaoC,IASZ,SACC,qBAAK3D,IAAK6D,GAAYzD,IAAI,mCC5DxB0D,GAAoBtF,IAAOC,IAAV,oMAKF,SAAAC,GAAK,OAAIA,EAAMC,MAAME,cAIpCkE,GAAYvE,IAAOuF,GAAV,2CACL,SAAArF,GAAK,OAAIA,EAAMC,MAAMyC,SAGzB4C,GAAUxF,IAAOC,IAAV,+KAUPwF,GAAgBzF,IAAOC,IAAV,kRAKE,SAAAC,GAAK,OAAIA,EAAMC,MAAME,cAQpCU,GAASf,IAAOgB,OAAV,mLAIF,SAAAd,GAAK,OAAIA,EAAMC,MAAMyC,SA6DhB8C,GAtDK,WACnB,MACCxE,qBAAWV,GADJmE,EAAR,EAAQA,UAAW5B,EAAnB,EAAmBA,aAAc4C,EAAjC,EAAiCA,cAAeC,EAAhD,EAAgDA,iBAyBhD,EAA0BC,sBAtBJ,SAACC,EAAOC,GAC7B,OAAQA,EAAO7B,MACd,IAAK,MACJ,OAAO0B,EAAiBjB,GACzB,IAAK,SACJ,IAAMqB,EAAcrB,EAAUS,QAAO,SAAAL,GAAQ,OAAKA,EAASjB,cAC3D,OAAO8B,EAAiBI,GACzB,IAAK,YACJ,IAAMC,EAAiBtB,EAAUS,QAChC,SAAAL,GAAQ,OAAIA,EAASjB,cAEtB,OAAO8B,EAAiBK,GACzB,IAAK,QACJ,IAAMC,EAAavB,EAAUS,QAAO,SAAAL,GAAQ,OAAKA,EAASjB,cAE1D,OADAhC,EAAcoE,GACPnD,EAAamD,GACrB,QACCC,QAAQC,IAAI,6BAKf,mBAAcC,GAAd,WAEA,OACC,qCACC,eAACf,GAAD,WACC,eAAC,GAAD,WAAYK,EAAcW,OAA1B,iBACA,eAACd,GAAD,WACC,cAAC,GAAD,CAAQpE,QAAS,kBAAMiF,EAAS,CAAEnC,KAAM,SAAxC,iBACA,cAAC,GAAD,CAAQ9C,QAAS,kBAAMiF,EAAS,CAAEnC,KAAM,YAAxC,oBACA,cAAC,GAAD,CAAQ9C,QAAS,kBAAMiF,EAAS,CAAEnC,KAAM,eAAxC,0BAID,cAAC,GAAD,CAAQ9C,QAAS,kBAAMiF,EAAS,CAAEnC,KAAM,WAAxC,gCAID,eAACuB,GAAD,WACC,cAAC,GAAD,CAAQrE,QAAS,kBAAMiF,EAAS,CAAEnC,KAAM,SAAxC,iBACA,cAAC,GAAD,CAAQ9C,QAAS,kBAAMiF,EAAS,CAAEnC,KAAM,YAAxC,oBACA,cAAC,GAAD,CAAQ9C,QAAS,kBAAMiF,EAAS,CAAEnC,KAAM,eAAxC,8BC3FEqC,GAAYvG,IAAOwG,KAAV,sHAuBAC,GAjBE,WAChB,IAAQd,EAAkBzE,qBAAWV,GAA7BmF,cACR,OACC,eAACY,GAAD,WACEZ,EAAcb,KAAI,SAAAC,GAAQ,OAC1B,cAAC,GAAD,CAEClB,KAAMkB,EAASlB,KACfC,WAAYiB,EAASjB,WACrBF,GAAImB,EAASnB,IAHRmB,EAASnB,OAMhB,cAAC,GAAD,QCfG8C,GAAO1G,IAAOC,IAAV,8MAqCK0G,GAxBO,WACrB,MAAkC3D,mBAAS,IAA3C,mBAAO2B,EAAP,KAAkB5B,EAAlB,KACA,EAA0CC,mBAAS,IAAnD,mBAAO2C,EAAP,KAAsBC,EAAtB,KAUA,OARAgB,qBAAU,WACThB,EAAiBjB,KACf,CAACA,IAEJiC,qBAAU,WACT7D,EAAab,EAAa,YACxB,IAGF,cAAC,EAAY2E,SAAb,CACC5C,MAAO,CAAEU,YAAW5B,eAAc4C,gBAAeC,oBADlD,SAGC,eAACc,GAAD,WACC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,UC1BWrF,GAbA,CACdyF,KAAM,CACLlE,MAAO,mBACPvC,WAAY,mBACZD,KCPa,IAA0B,6CDSxC2G,MAAO,CACNnE,MAAO,qBACPvC,WAAY,kBACZD,KEZa,IAA0B,+CC2B1B4G,OAnBf,WACC,MAA0BhE,mBAAS,QAAnC,mBAAO7C,EAAP,KAAcgB,EAAd,KAOA,OALAyF,qBAAU,WACT,IAAMK,EAAe3F,aAAaG,QAAQ,SAC1CwF,GAAgB9F,EAAS8F,KACvB,IAGF,cAAC,IAAD,CAAe9G,MAAOkB,GAAOlB,GAA7B,SACC,cAAC,EAAa0G,SAAd,CAAuB5C,MAAO,CAAE9D,QAAOgB,YAAvC,SACC,cAAC,EAAD,UACC,cAAC,GAAD,W,MCfL+F,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,GAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.70b21bee.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst WrapperItem = styled.div`\r\n\tposition: relative;\r\n\tbackground-image: url(${props => props.theme.logo});\r\n\tbackground-size: 100% 35vh;\r\n\tbackground-repeat: no-repeat;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tmin-height: 100vh;\r\n\tbackground-color: ${props => props.theme.background};\r\n`;\r\n\r\nconst Wrapper = ({ children }) => {\r\n\treturn <WrapperItem>{children}</WrapperItem>;\r\n};\r\nexport default Wrapper;\r\n","import { createContext } from 'react';\r\n\r\nconst TodoContext = createContext(null);\r\n\r\nexport default TodoContext;\r\n","import { createContext } from 'react';\r\n\r\nconst ThemeContext = createContext(null);\r\n\r\nexport default ThemeContext;\r\n","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","import { useContext } from 'react';\r\nimport ThemeContext from '../../../store/theme-context';\r\n\r\nimport iconSun from './../../../assets/images/icon-sun.svg';\r\nimport iconMoon from './../../../assets/images/icon-moon.svg';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\theight: 15vh;\r\n`;\r\n\r\nconst Heading = styled.h1`\r\n\tfont-size: 4rem;\r\n\tletter-spacing: 15px;\r\n\ttext-transform: uppercase;\r\n\tmargin-left: 1em;\r\n\ttransition: 0.3s;\r\n\t&:hover {\r\n\t\ttransform: scale(1.1);\r\n\t}\r\n\t@media (max-width: 500px) {\r\n\t\tmargin-left: 0;\r\n\t}\r\n`;\r\n\r\nconst Button = styled.button`\r\n\tmargin-right: 2em;\r\n\tborder: none;\r\n\tbackground: transparent;\r\n\tcursor: pointer;\r\n\ttransition: 0.3s;\r\n\t&:hover {\r\n\t\ttransform: scale(1.1);\r\n\t}\r\n\t@media (max-width: 500px) {\r\n\t\tmargin-right: 0;\r\n\t}\r\n`;\r\n\r\nconst TodoHeader = () => {\r\n\tconst { theme, setTheme } = useContext(ThemeContext);\r\n\r\n\tconst handleClick = () => {\r\n\t\tconst themes = theme === 'dark' ? 'light' : 'dark';\r\n\r\n\t\tlocalStorage.setItem('theme', themes);\r\n\t\tsetTheme(themes);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Header>\r\n\t\t\t<div>\r\n\t\t\t\t<Heading>Todo</Heading>\r\n\t\t\t</div>\r\n\t\t\t<Button onClick={handleClick}>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={localStorage.getItem('theme') === 'dark' ? iconSun : iconMoon}\r\n\t\t\t\t\talt='light theme icon'\r\n\t\t\t\t\ttitle='change theme'\r\n\t\t\t\t/>\r\n\t\t\t</Button>\r\n\t\t</Header>\r\n\t);\r\n};\r\n\r\nexport default TodoHeader;\r\n","export const saveToStorage = key => {\r\n\tlocalStorage.setItem('todos', JSON.stringify(key));\r\n};\r\n\r\nexport const getFromTodos = key => {\r\n\treturn JSON.parse(localStorage.getItem(key)) || [];\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst DivButton = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\twidth: 10%;\r\n\t@media (max-width: 500px) {\r\n\t\twidth: 20%;\r\n\t}\r\n`;\r\n\r\nconst ButtonItem = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\twidth: 30px;\r\n\theight: 30px;\r\n\tborder-radius: 50%;\r\n\tborder: 1px solid hsl(233, 14%, 35%);\r\n\tbackground: transparent;\r\n\tcursor: pointer;\r\n\ttransition: 0.3s;\r\n\tbackground-image: ${props =>\r\n\t\tprops.status\r\n\t\t\t? 'linear-gradient(to right,hsl(192, 100%, 67%),hsl(280, 87%, 65%))'\r\n\t\t\t: 'none'};\r\n\t&:hover {\r\n\t\ttransform: scale(1.1);\r\n\t}\r\n`;\r\n\r\nconst Button = ({ children, onClick, complete }) => {\r\n\treturn (\r\n\t\t<DivButton>\r\n\t\t\t<ButtonItem status={complete} onClick={onClick}>\r\n\t\t\t\t{children}\r\n\t\t\t</ButtonItem>\r\n\t\t</DivButton>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","export default __webpack_public_path__ + \"static/media/icon-check.a8fb15d0.svg\";","import React, { useState, useContext } from 'react';\r\nimport { saveToStorage, getFromTodos } from '../../UI/Storage/Storage';\r\nimport TodoContext from '../../../store/todolist-context';\r\nimport nextId from 'react-id-generator';\r\nimport styled from 'styled-components';\r\nimport Button from '../../UI/Button/Button';\r\nimport icon from './../../../assets/images/icon-check.svg';\r\n\r\nconst Form = styled.form`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tmargin-top: 2em;\r\n\theight: 70px;\r\n\tbackground-color: ${props => props.theme.background};\r\n\tbox-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n\twidth: 90%;\r\n\theight: 100%;\r\n\tpadding-left: 1em;\r\n\tborder: none;\r\n\tbackground: transparent;\r\n\tcolor: ${props => props.theme.color};\r\n\tfont-size: 2rem;\r\n\t@media (max-width: 500px) {\r\n\t\twidth: 80%;\r\n\t\tfont-size: 1.5rem;\r\n\t}\r\n`;\r\n\r\nconst Error = styled.div`\r\n\tmargin-top: 2em;\r\n\ttext-align: center;\r\n\tcolor: red;\r\n`;\r\n\r\nconst TodoForm = props => {\r\n\tconst { setTodoItems } = useContext(TodoContext);\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\tconst [complete, setComplete] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\tconst todoId = nextId();\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tif (!inputValue) setError(true);\r\n\t\telse {\r\n\t\t\tsetError(false);\r\n\t\t\tsetTodoItems(prevState => [\r\n\t\t\t\t...prevState,\r\n\t\t\t\t{ id: todoId, name: inputValue, isComplete: complete },\r\n\t\t\t]);\r\n\r\n\t\t\tif (getFromTodos('todos') === null) {\r\n\t\t\t\tsaveToStorage([\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: todoId,\r\n\t\t\t\t\t\tname: inputValue,\r\n\t\t\t\t\t\tisComplete: complete,\r\n\t\t\t\t\t},\r\n\t\t\t\t]);\r\n\t\t\t} else {\r\n\t\t\t\tconst items = [\r\n\t\t\t\t\t...getFromTodos('todos'),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: todoId,\r\n\t\t\t\t\t\tname: inputValue,\r\n\t\t\t\t\t\tisComplete: complete,\r\n\t\t\t\t\t},\r\n\t\t\t\t];\r\n\t\t\t\tsaveToStorage(items);\r\n\t\t\t}\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t};\r\n\tconst handleChange = e => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\tconst handleClick = () => {\r\n\t\tsetComplete(!complete);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t<Button onClick={handleClick} complete={complete}>\r\n\t\t\t\t\t{complete && <img src={icon} alt='complete tasks icon' />}\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='Create a new todo...'\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\t\t\t</Form>\r\n\t\t\t{error && <Error>Input can't be empty</Error>}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default TodoForm;\r\n","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import { useContext } from 'react';\r\nimport TodoContext from '../../../store/todolist-context';\r\nimport icon from './../../../assets/images/icon-check.svg';\r\nimport iconDelete from './../../../assets/images/icon-cross.svg';\r\n\r\nimport styled from 'styled-components';\r\nimport Button from '../../UI/Button/Button';\r\nimport { saveToStorage } from '../../UI/Storage/Storage';\r\n\r\nconst Item = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\theight: 70px;\r\n\tbackground-color: ${props => props.theme.background};\r\n\tbox-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n`;\r\n\r\nconst TodoValue = styled.h2`\r\n\tpadding-left: 1em;\r\n\tcolor: ${props => props.theme.color};\r\n\tfont-weight: normal;\r\n\tfont-size: 2rem;\r\n\twidth: 80%;\r\n\t@media (max-width: 500px) {\r\n\t\tfont-size: 1.5rem;\r\n\t\twidth: 70%;\r\n\t}\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n\tborder: none;\r\n\tbackground: transparent;\r\n\tcursor: pointer;\r\n`;\r\n\r\nconst TodoItem = ({ id, name, isComplete }) => {\r\n\tconst { todoItems, setTodoItems } = useContext(TodoContext);\r\n\r\n\tconst decoration = isComplete ? 'line-through' : 'none';\r\n\r\n\tconst handleClick = () => {\r\n\t\tconst changedItems = todoItems.map((todoItem, idx) => {\r\n\t\t\tif (todoItem.name === name) {\r\n\t\t\t\ttodoItem.isComplete = !todoItem.isComplete;\r\n\t\t\t\treturn { ...todoItem };\r\n\t\t\t}\r\n\t\t\treturn todoItem;\r\n\t\t});\r\n\t\tsaveToStorage(changedItems);\r\n\t\tsetTodoItems(prevState => [...changedItems]);\r\n\t};\r\n\r\n\tconst handleDeleteClick = () => {\r\n\t\tconst withoutDeleteItem = todoItems.filter(todoItem => todoItem.id !== id);\r\n\t\tsaveToStorage(withoutDeleteItem);\r\n\t\tsetTodoItems(withoutDeleteItem);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Item>\r\n\t\t\t<Button complete={isComplete} onClick={handleClick}>\r\n\t\t\t\t{isComplete && <img src={icon} alt='complete tasks icon' />}\r\n\t\t\t</Button>\r\n\t\t\t<TodoValue style={{ textDecoration: decoration }}>{name}</TodoValue>\r\n\t\t\t<DeleteButton onClick={handleDeleteClick}>\r\n\t\t\t\t<img src={iconDelete} alt='delete closest task icon' />\r\n\t\t\t</DeleteButton>\r\n\t\t</Item>\r\n\t);\r\n};\r\n\r\nexport default TodoItem;\r\n","import styled from 'styled-components';\r\nimport { useContext, useReducer } from 'react';\r\nimport TodoContext from '../../../store/todolist-context';\r\nimport { saveToStorage } from '../../UI/Storage/Storage';\r\n\r\nconst TodoActionWrapper = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-around;\r\n\theight: 70px;\r\n\tbackground-color: ${props => props.theme.background};\r\n\tbox-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n`;\r\n\r\nconst TodoValue = styled.h3`\r\n\tcolor: ${props => props.theme.color};\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-around;\r\n\twidth: 30%;\r\n\t@media (max-width: 500px) {\r\n\t\tdisplay: none;\r\n\t}\r\n`;\r\n\r\nconst ButtonsMobile = styled.div`\r\n\tdisplay: none;\r\n\talign-items: center;\r\n\tjustify-content: space-around;\r\n\theight: 70px;\r\n\tbackground-color: ${props => props.theme.background};\r\n\tbox-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n\tmargin-top: 1.5em;\r\n\t@media (max-width: 500px) {\r\n\t\tdisplay: flex;\r\n\t}\r\n`;\r\n\r\nconst Button = styled.button`\r\n\tborder: none;\r\n\tbackground: transparent;\r\n\tcursor: pointer;\r\n\tcolor: ${props => props.theme.color};\r\n\ttransition: 0.3s;\r\n\t&:hover {\r\n\t\tcolor: hsl(220, 98%, 61%);\r\n\t}\r\n`;\r\n\r\nconst TodoActions = () => {\r\n\tconst { todoItems, setTodoItems, filteredTodos, setFilteredTodos } =\r\n\t\tuseContext(TodoContext);\r\n\r\n\tconst filterReducer = (state, action) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase 'All':\r\n\t\t\t\treturn setFilteredTodos(todoItems);\r\n\t\t\tcase 'Active':\r\n\t\t\t\tconst activeTodos = todoItems.filter(todoItem => !todoItem.isComplete);\r\n\t\t\t\treturn setFilteredTodos(activeTodos);\r\n\t\t\tcase 'Completed':\r\n\t\t\t\tconst completedTodos = todoItems.filter(\r\n\t\t\t\t\ttodoItem => todoItem.isComplete\r\n\t\t\t\t);\r\n\t\t\t\treturn setFilteredTodos(completedTodos);\r\n\t\t\tcase 'Clear':\r\n\t\t\t\tconst clearTodos = todoItems.filter(todoItem => !todoItem.isComplete);\r\n\t\t\t\tsaveToStorage(clearTodos);\r\n\t\t\t\treturn setTodoItems(clearTodos);\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('Dont have this option');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tconst [state, dispatch] = useReducer(filterReducer);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TodoActionWrapper>\r\n\t\t\t\t<TodoValue>{filteredTodos.length} items left</TodoValue>\r\n\t\t\t\t<Buttons>\r\n\t\t\t\t\t<Button onClick={() => dispatch({ type: 'All' })}>All</Button>\r\n\t\t\t\t\t<Button onClick={() => dispatch({ type: 'Active' })}>Active</Button>\r\n\t\t\t\t\t<Button onClick={() => dispatch({ type: 'Completed' })}>\r\n\t\t\t\t\t\tCompleted\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Buttons>\r\n\t\t\t\t<Button onClick={() => dispatch({ type: 'Clear' })}>\r\n\t\t\t\t\tClear Completed\r\n\t\t\t\t</Button>\r\n\t\t\t</TodoActionWrapper>\r\n\t\t\t<ButtonsMobile>\r\n\t\t\t\t<Button onClick={() => dispatch({ type: 'All' })}>All</Button>\r\n\t\t\t\t<Button onClick={() => dispatch({ type: 'Active' })}>Active</Button>\r\n\t\t\t\t<Button onClick={() => dispatch({ type: 'Completed' })}>\r\n\t\t\t\t\tCompleted\r\n\t\t\t\t</Button>\r\n\t\t\t</ButtonsMobile>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TodoActions;\r\n","import { useContext } from 'react';\r\nimport TodoContext from '../../../store/todolist-context';\r\n\r\nimport styled from 'styled-components';\r\nimport TodoItem from '../TodoItem/TodoItem';\r\nimport TodoActions from '../TodoActions/TodoActions';\r\n\r\nconst TodosList = styled.main`\r\n\tmargin-top: 2em;\r\n\tmin-height: 70px;\r\n\tbox-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n`;\r\n\r\nconst TodoList = () => {\r\n\tconst { filteredTodos } = useContext(TodoContext);\r\n\treturn (\r\n\t\t<TodosList>\r\n\t\t\t{filteredTodos.map(todoItem => (\r\n\t\t\t\t<TodoItem\r\n\t\t\t\t\tkey={todoItem.id}\r\n\t\t\t\t\tname={todoItem.name}\r\n\t\t\t\t\tisComplete={todoItem.isComplete}\r\n\t\t\t\t\tid={todoItem.id}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t\t<TodoActions />\r\n\t\t</TodosList>\r\n\t);\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport TodoContext from './../../../store/todolist-context';\r\n\r\nimport TodoHeader from '../TodoHeader/TodoHeader';\r\nimport TodoForm from '../TodoForm/TodoForm';\r\nimport TodoList from '../TodoList/TodoList';\r\n\r\nimport styled from 'styled-components';\r\nimport { getFromTodos } from '../../UI/Storage/Storage';\r\n\r\nconst Todo = styled.div`\r\n\tmargin: 0 auto;\r\n\twidth: 50%;\r\n\tcolor: white;\r\n\tmin-height: 40em;\r\n\t@media (max-width: 774px) {\r\n\t\twidth: 70%;\r\n\t}\r\n\t@media (max-width: 500px) {\r\n\t\twidth: 85%;\r\n\t}\r\n`;\r\n\r\nconst TodoContainer = () => {\r\n\tconst [todoItems, setTodoItems] = useState([]);\r\n\tconst [filteredTodos, setFilteredTodos] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetFilteredTodos(todoItems);\r\n\t}, [todoItems]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTodoItems(getFromTodos('todos'));\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<TodoContext.Provider\r\n\t\t\tvalue={{ todoItems, setTodoItems, filteredTodos, setFilteredTodos }}\r\n\t\t>\r\n\t\t\t<Todo>\r\n\t\t\t\t<TodoHeader />\r\n\t\t\t\t<TodoForm />\r\n\t\t\t\t<TodoList />\r\n\t\t\t</Todo>\r\n\t\t</TodoContext.Provider>\r\n\t);\r\n};\r\nexport default TodoContainer;\r\n","import logoDark from './../assets/images/bg-desktop-dark.jpg';\r\nimport logoLight from './../assets/images/bg-desktop-light.jpg';\r\n\r\nconst themes = {\r\n\tdark: {\r\n\t\tcolor: 'hsl(234,39%,85%)',\r\n\t\tbackground: 'hsl(235,24%,19%)',\r\n\t\tlogo: logoDark,\r\n\t},\r\n\tlight: {\r\n\t\tcolor: 'hsl(235, 19%, 35%)',\r\n\t\tbackground: 'hsl(0, 0%, 98%)',\r\n\t\tlogo: logoLight,\r\n\t},\r\n};\r\n\r\nexport default themes;\r\n","export default __webpack_public_path__ + \"static/media/bg-desktop-dark.73e47dbb.jpg\";","export default __webpack_public_path__ + \"static/media/bg-desktop-light.3508d620.jpg\";","import { useState, useEffect } from 'react';\nimport Wrapper from './components/UI/Wrapper/Wrapper';\nimport TodoContainer from './components/Todo/TodoContainer/TodoContainer';\nimport { ThemeProvider } from 'styled-components';\nimport themes from './utils/themes';\n\nimport ThemeContext from './store/theme-context';\n\nfunction App() {\n\tconst [theme, setTheme] = useState('dark');\n\n\tuseEffect(() => {\n\t\tconst storageTheme = localStorage.getItem('theme');\n\t\tstorageTheme && setTheme(storageTheme);\n\t}, []);\n\n\treturn (\n\t\t<ThemeProvider theme={themes[theme]}>\n\t\t\t<ThemeContext.Provider value={{ theme, setTheme }}>\n\t\t\t\t<Wrapper>\n\t\t\t\t\t<TodoContainer />\n\t\t\t\t</Wrapper>\n\t\t\t</ThemeContext.Provider>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/GlobalStyles.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}